# GNU Make project makefile autogenerated by GENie

.SUFFIXES:

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(MAKESHELL)))
  SHELLTYPE := posix
endif

ifeq (posix,$(SHELLTYPE))
  MKDIR = $(SILENT) mkdir -p "$(1)"
  COPY  = $(SILENT) cp -fR "$(1)" "$(2)"
  RM    = $(SILENT) rm -f "$(1)"
else
  MKDIR = $(SILENT) mkdir "$(subst /,\\,$(1))" 2> nul || exit 0
  COPY  = $(SILENT) copy /Y "$(subst /,\\,$(1))" "$(subst /,\\,$(2))"
  RM    = $(SILENT) del /F "$(subst /,\\,$(1))" 2> nul || exit 0
endif

CC  = gcc
CXX = g++
AR  = ar

ifndef RESCOMP
  ifdef WINDRES
    RESCOMP = $(WINDRES)
  else
    RESCOMP = windres
  endif
endif

MAKEFILE = SoloudDynamic.make

ifeq ($(config),debug)
  OBJDIR              = debug/Debug/SoloudDynamic
  TARGETDIR           = ../../lib
  TARGET              = $(TARGETDIR)/libsoloud.so
  DEFINES            += -DDEBUG
  INCLUDES           += -I"../../src/backend" -I"../../src/c_api" -I"../../src/filter" -I"../../src/audiosource" -I"../../src/core" -I"../../src/tools" -I"../../src/backend/portaudio" -I"../../src/backend/opensles" -I"../../src/backend/winmm" -I"../../src/backend/alsa" -I"../../src/backend/nosound" -I"../../src/backend/sdl" -I"../../src/backend/openal" -I"../../src/backend/coreaudio" -I"../../src/backend/sdl_static" -I"../../src/backend/jack" -I"../../src/backend/sdl2_static" -I"../../src/backend/vita_homebrew" -I"../../src/backend/xaudio2" -I"../../src/backend/miniaudio" -I"../../src/backend/null" -I"../../src/backend/wasapi" -I"../../src/backend/oss" -I"../../src/audiosource/wav" -I"../../src/audiosource/speech" -I"../../src/audiosource/sfxr" -I"../../src/audiosource/tedsid" -I"../../src/audiosource/vizsn" -I"../../src/audiosource/monotone" -I"../../src/audiosource/openmpt" -I"../../src/audiosource/vic" -I"../../src/audiosource/noise" -I"../../src/tools/codegen" -I"../../src/tools/lutgen" -I"../../src/tools/tedsid2dump" -I"../../src/tools/resamplerlab" -I"../../src/tools/sanity" -I"../../include"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -fPIC -fPIC
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -fPIC -fPIC
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -fPIC -fno-exceptions -fno-rtti -fPIC
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -fPIC -fPIC
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -fPIC -fno-exceptions -fno-rtti -fPIC
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L"../../lib" -shared
  LIBDEPS            += ../../lib/libsoloud_static.a
  LDDEPS             += ../../lib/libsoloud_static.a
  LDRESP              =
  LIBS               += $(LDDEPS)
  EXTERNAL_LIBS      +=
  LINKOBJS            = $(OBJECTS)
  LINKCMD             = $(CXX) -o $(TARGET) $(LINKOBJS) $(RESOURCES) $(ARCH) $(ALL_LDFLAGS) $(LIBS)
  OBJRESP             =
  OBJECTS := \
	$(OBJDIR)/src/c_api/soloud_c.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release)
  OBJDIR              = release/Release/SoloudDynamic
  TARGETDIR           = ../../lib
  TARGET              = $(TARGETDIR)/libsoloud.so
  DEFINES            += -DNDEBUG
  INCLUDES           += -I"../../src/backend" -I"../../src/c_api" -I"../../src/filter" -I"../../src/audiosource" -I"../../src/core" -I"../../src/tools" -I"../../src/backend/portaudio" -I"../../src/backend/opensles" -I"../../src/backend/winmm" -I"../../src/backend/alsa" -I"../../src/backend/nosound" -I"../../src/backend/sdl" -I"../../src/backend/openal" -I"../../src/backend/coreaudio" -I"../../src/backend/sdl_static" -I"../../src/backend/jack" -I"../../src/backend/sdl2_static" -I"../../src/backend/vita_homebrew" -I"../../src/backend/xaudio2" -I"../../src/backend/miniaudio" -I"../../src/backend/null" -I"../../src/backend/wasapi" -I"../../src/backend/oss" -I"../../src/audiosource/wav" -I"../../src/audiosource/speech" -I"../../src/audiosource/sfxr" -I"../../src/audiosource/tedsid" -I"../../src/audiosource/vizsn" -I"../../src/audiosource/monotone" -I"../../src/audiosource/openmpt" -I"../../src/audiosource/vic" -I"../../src/audiosource/noise" -I"../../src/tools/codegen" -I"../../src/tools/lutgen" -I"../../src/tools/tedsid2dump" -I"../../src/tools/resamplerlab" -I"../../src/tools/sanity" -I"../../include"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -O2 -O3 -fPIC -fPIC
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -O2 -O3 -fPIC -fPIC
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -O2 -O3 -fPIC -fno-exceptions -fno-rtti -fPIC
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -O2 -O3 -fPIC -fPIC
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -O2 -O3 -fPIC -fno-exceptions -fno-rtti -fPIC
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L"../../lib" -s -shared
  LIBDEPS            += ../../lib/libsoloud_static.a
  LDDEPS             += ../../lib/libsoloud_static.a
  LDRESP              =
  LIBS               += $(LDDEPS)
  EXTERNAL_LIBS      +=
  LINKOBJS            = $(OBJECTS)
  LINKCMD             = $(CXX) -o $(TARGET) $(LINKOBJS) $(RESOURCES) $(ARCH) $(ALL_LDFLAGS) $(LIBS)
  OBJRESP             =
  OBJECTS := \
	$(OBJDIR)/src/c_api/soloud_c.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJDIRS := \
	$(OBJDIR) \
	$(OBJDIR)/src/c_api \

RESOURCES := \

.PHONY: clean prebuild prelink

all: $(OBJDIRS) $(TARGETDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LIBDEPS) $(EXTERNAL_LIBS) $(RESOURCES) $(OBJRESP) $(LDRESP) | $(TARGETDIR) $(OBJDIRS)
	@echo Linking SoloudDynamic
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
	-$(call MKDIR,$(TARGETDIR))

$(OBJDIRS):
	@echo Creating $(@)
	-$(call MKDIR,$@)

clean:
	@echo Cleaning SoloudDynamic
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH) $(MAKEFILE) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) -x c++-header $(DEFINES) $(INCLUDES) -o "$@" -c "$<"

$(GCH_OBJC): $(PCH) $(MAKEFILE) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_OBJCPPFLAGS) -x objective-c++-header $(DEFINES) $(INCLUDES) -o "$@" -c "$<"
endif

ifneq (,$(OBJRESP))
$(OBJRESP): $(OBJECTS) | $(TARGETDIR) $(OBJDIRS)
	$(SILENT) echo $^
	$(SILENT) echo $^ > $@
endif

ifneq (,$(LDRESP))
$(LDRESP): $(LDDEPS) | $(TARGETDIR) $(OBJDIRS)
	$(SILENT) echo $^
	$(SILENT) echo $^ > $@
endif

$(OBJDIR)/src/c_api/soloud_c.o: ../../src/c_api/soloud_c.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/src/c_api
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
  -include $(OBJDIR)/$(notdir $(PCH))_objc.d
endif
